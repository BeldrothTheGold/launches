# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Configure poetry
      run: |
        poetry config virtualenvs.in-project true
        
    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
  
    - name: Install dependencies
      run: |
        poetry install --with github-actions
  
    - name: Lint with pylint
      run: |
        find . --path ./.venv -prune -name '*.py' -exec poetry run pylint {} \;

    - name: Run mypy
      run: |
        poetry run mypy

    - name: Run tests
      run: |
        poetry run pytest -sxv --cov
